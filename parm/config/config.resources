#! /usr/bin/env bash

########## config.resources ##########
# Set resource information for job tasks
# e.g. walltime, node, cores per node, memory etc.

echo "BEGIN: config.resources"

if [[ "${machine}" = "WCOSS2" ]]; then
  export npe_node_max=128
elif [[ "${machine}" = "JET" ]]; then
  if [[ ${PARTITION_BATCH} = "xjet" ]]; then
    export npe_node_max=24
  elif [[ ${PARTITION_BATCH} = "vjet" || ${PARTITION_BATCH} = "sjet" ]]; then
    export npe_node_max=16
  elif [[ ${PARTITION_BATCH} = "kjet" ]]; then
    export npe_node_max=40
  fi
elif [[ ${machine} = "HERA" ]]; then
  export npe_node_max=40
elif [[ ${machine} = "S4" ]]; then
  if [[ ${PARTITION_BATCH} = "s4" ]]; then
    export npe_node_max=32
  elif [[ ${PARTITION_BATCH} = "ivy" ]]; then
    export npe_node_max=20
  fi
elif [[ ${machine} = "ORION" ]]; then
  export npe_node_max=40
fi

# fcst
export is_exclusive=True

export layout_x=${layout_x}
export layout_y=${layout_y}
export WRITE_GROUP=${WRITE_GROUP}
export WRTTASK_PER_GROUP_PER_THREAD=${WRTTASK_PER_GROUP_PER_THREAD_GFS}
ntasks_fv3=${ntasks_fv3}
ntasks_quilt=${ntasks_quilt}
nthreads_fv3=${nthreads_fv3}

# PETS for the atmosphere dycore
(( FV3PETS = ntasks_fv3 * nthreads_fv3 ))
echo "FV3 using (nthreads, PETS) = (${nthreads_fv3}, ${FV3PETS})"

# PETS for quilting
if [[ "${QUILTING:-}" = ".true." ]]; then
  (( QUILTPETS = ntasks_quilt * nthreads_fv3 ))
  (( WRTTASK_PER_GROUP = WRTTASK_PER_GROUP_PER_THREAD ))  # when threads are used, WRTTASKS_PER_GROUP = INCOMING_WRTTASKS_PER_GROUP * threads
  # model_configure should be updated to reflect the number of threads used by calling this variable write_pets_per_group
  export WRTTASK_PER_GROUP
else
  QUILTPETS=0
fi
echo "QUILT using (nthreads, PETS) = (${nthreads_fv3}, ${QUILTPETS})"

# Total PETS for the atmosphere component
ATMTHREADS=${nthreads_fv3}
(( ATMPETS = FV3PETS + QUILTPETS ))
export ATMPETS ATMTHREADS
echo "FV3ATM using (nthreads, PETS) = (${ATMTHREADS}, ${ATMPETS})"

# Total PETS for the coupled model (starting w/ the atmosphere)
NTASKS_TOT=${ATMPETS}

# The mediator PETS can overlap with other components, usually it lands on the atmosphere tasks.
# However, it is suggested limiting mediator PETS to 300, as it may cause the slow performance.
# See https://docs.google.com/document/d/1bKpi-52t5jIfv2tuNHmQkYUe3hkKsiG_DG_s6Mnukog/edit
# TODO: Update reference when moved to ufs-weather-model RTD
MEDTHREADS=${nthreads_mediator:-1}
MEDPETS=${MEDPETS:-ATMPETS}
[[ "${MEDPETS}" -gt 300 ]] && MEDPETS=300
export MEDPETS MEDTHREADS
echo "MEDIATOR using (threads, PETS) = (${MEDTHREADS}, ${MEDPETS})"

if [[ "${DO_AERO}" = "YES" ]]; then
  # GOCART shares the same grid and forecast tasks as FV3 (do not add write grid component tasks).
  (( CHMTHREADS = ATMTHREADS ))
  (( CHMPETS = FV3PETS ))
  # Do not add to NTASKS_TOT
  export CHMPETS CHMTHREADS
  echo "GOCART using (threads, PETS) = (${CHMTHREADS}, ${CHMPETS})"
fi

if [[ "${DO_WAVE}" = "YES" ]]; then
  (( WAVPETS = ntasks_ww3 * nthreads_ww3 ))
  (( WAVTHREADS = nthreads_ww3 ))
  export WAVPETS WAVTHREADS
  echo "WW3 using (threads, PETS) = (${WAVTHREADS}, ${WAVPETS})"
  (( NTASKS_TOT = NTASKS_TOT + WAVPETS ))
fi

if [[ "${DO_OCN}" = "YES" ]]; then
  (( OCNPETS = ntasks_mom6 * nthreads_mom6 ))
  (( OCNTHREADS = nthreads_mom6 ))
  export OCNPETS OCNTHREADS
  echo "MOM6 using (threads, PETS) = (${OCNTHREADS}, ${OCNPETS})"
  (( NTASKS_TOT = NTASKS_TOT + OCNPETS ))
fi

if [[ "${DO_ICE}" = "YES" ]]; then
  (( ICEPETS = ntasks_cice6 * nthreads_cice6 ))
  (( ICETHREADS = nthreads_cice6 ))
  export ICEPETS ICETHREADS
  echo "CICE6 using (threads, PETS) = (${ICETHREADS}, ${ICEPETS})"
  (( NTASKS_TOT = NTASKS_TOT + ICEPETS ))
fi

echo "Total PETS for ${NTASKS_TOT}"

declare -x npe_fcst="${NTASKS_TOT}"
declare -x nth_fcst=1  # ESMF handles threading for the UFS-weather-model
declare -x npe_node_fcst="${npe_node_max}"

unset NTASKS_TOT


echo "END: config.resources"
