#!/bin/sh
#
# Metafile Script : gefs_meta_lows.sh_comb
#
# Log :
# J. Carr/HPC	3/10/2003	Moved script from prodsp to hdtb1/dtb.
# F. Achorn/NCO	05/18/2006	modify script to run for more than one garea.
# F. Achorn/OPC 06/03/2008      Changed the gdfile for members 11-20 and cntrl
#                               (previous run) from pXX_06 to pXX_6
# C. Magee/NCO  10/06/2008      Changed to use COMINs and COMIN for input file
#                               locations (to make testing easier).
# Xianwu Xue/EMC 04/06/2020     Modified for GEFS v12
#
# Set Up Local Variables
#
echo "$(date -u) begin $(basename $BASH_SOURCE)"

set -xa
if [[ ${STRICT:-NO} == "YES" ]]; then
	# Turn on strict bash error checking
	set -eu
fi

echo memberlist=$memberlist


sGrid=${sGrid} #:-"_0p50"}

mkdir $DATA/gefs_meta_lows_spag
cd $DATA/gefs_meta_lows_spag

# SET VARIOUS TIME/DATE PARAMETERS
case $cyc in
	(00) fcsthrs="012 024 036 048 060 072 084 096 108 120 132 144 156 168 180 192 204" ;;
	(06) fcsthrs="012 024 036 048 060 072 084 096 108 120 132 144 156 168 180 192 204" ;;
	(12) fcsthrs="012 024 036 048 060 072 084 096 108 120 132 144 156 168 180 192 204 216 228" ;;
	(18) fcsthrs="012 024 036 048 060 072 084 096 108 120 132 144 156 168 180 192 204" ;;
esac

metaname="gefs${sGrid}_${PDY}_${cyc}_meta_lows"
device="nc|$metaname"
# GENERATE THE PMSL LOW CENTERS
for area in nam us trop sam hi; do
	proj=" "
	if [ ${area} = "nam" ]; then
		num=" "
		name="NAM"
		garea="nam"
		proj=" "
	elif [ ${area} = "us" ]; then
		num="#"
		name="US"
		garea="bwus"
		proj=" "
	elif [ ${area} = "trop" ]; then
		num=" "
		name="TROP"
		garea="5;-100;48;-25"
		proj="MER"
	elif [ ${area} = "sam" ]; then
		num=" "
		name="SAM"
		garea="sam"
		proj=" "
	else
		num=" "
		name="HI"
		garea="-16;173;34;-67"
		proj="STR/90.0;-155.0;0.0"
	fi
	prodname="LOW CNTRS"

########################################################
# for testing only, restrict to one lvl and fcsthr. will comment these out 
# when implementing.
#fcsthrs="024 048"
########################################################


# START PRODUCTION OF METAFILE

	for fcsthr in ${fcsthrs}; do
		fcsthr_6=$( printf %03i $(( 10#${fcsthr} + 6 )) )
		fcsthr_ecm=$( printf %03i $(( 10#${fcsthr} + $ECM_fcsthrs )) )
		
		rm -rf gefs_avg gefs_avg_6 gfs gfs_6 ecmwf ukmet dgex

		grids=${memberlist}
		for fn in $(echo $grids)
		do
			rm -rf $fn ${fn}_6

			if [ -r $COMIN/$COMPONENT/gempak/ge${fn}${sGrid}_${PDY}${cyc}f${fcsthr} ]; then
				ln -s $COMIN/$COMPONENT/gempak/ge${fn}${sGrid}_${PDY}${cyc}f${fcsthr} $fn
			fi

			if [ -r $COMINs/gefs.${PDY_6}/${cyc_6}/atmos/gempak/ge${fn}${sGrid}_${PDY_6}${cyc_6}f${fcsthr_6} ]; then
				ln -s $COMINs/gefs.${PDY_6}/${cyc_6}/atmos/gempak/ge${fn}${sGrid}_${PDY_6}${cyc_6}f${fcsthr_6} ${fn}_6
			fi
		done

		fn=gefs_avg
		rm -rf ${fn}
		if [ -r $COMIN/$COMPONENT/gempak/geavg${sGrid}_${PDY}${cyc}f${fcsthr} ]; then
			ln -s $COMIN/$COMPONENT/gempak/geavg${sGrid}_${PDY}${cyc}f${fcsthr} ${fn}
		fi

		fn=gefs_avg_6
		rm -rf ${fn}
		if [ -r $COMINs/gefs.${PDY_6}/${cyc_6}/atmos/gempak/geavg${sGrid}_${PDY_6}${cyc_6}f${fcsthr_6} ]; then
			ln -s $COMINs/gefs.${PDY_6}/${cyc_6}/atmos/gempak/geavg${sGrid}_${PDY_6}${cyc_6}f${fcsthr_6} ${fn}
		fi

		fn=gfs
		rm -rf ${fn}
		if [ -r $COMINsgfs/gfs.${PDY}/${cyc}/gempak/gfs${sGrid}_${PDY}${cyc}f${fcsthr} ]; then
			ln -s $COMINsgfs/gfs.${PDY}/${cyc}/gempak/gfs${sGrid}_${PDY}${cyc}f${fcsthr} ${fn}
		fi

		fn=gfs_6
		rm -rf ${fn}
		if [ -r $COMINsgfs/gfs.${PDY_6}/${cyc_6}/gempak/gfs${sGrid}_${PDY_6}${cyc_6}f${fcsthr_6} ]; then
			ln -s $COMINsgfs/gfs.${PDY_6}/${cyc_6}/gempak/gfs${sGrid}_${PDY_6}${cyc_6}f${fcsthr_6} ${fn}
		fi

		fn=ecmwf
		rm -rf ${fn}
		if [ -r ${COMINecmwf}.${ECM_PDY}/gempak/ecmwf_hr_${ECM_PDY}${ECM_cyc}f${fcsthr} ]; then
			ln -s ${COMINecmwf}.${ECM_PDY}/gempak/ecmwf_hr_${ECM_PDY}${ECM_cyc}f${fcsthr} ${fn}
		fi

		fn=ukmet
		rm -rf ${fn}
		if [ -r ${COMINukmet}.${ECM_PDY}/gempak/ukmet_hr_${ECM_PDY}${ECM_cyc}f${fcsthr_ecm} ]; then
			ln -s ${COMINukmet}.${ECM_PDY}/gempak/ukmet_hr_${ECM_PDY}${ECM_cyc}f${fcsthr_ecm} ${fn}
		fi

		fn=dgex
		rm -rf ${fn}
		if [ -r $COMINnawips/dgex.${PDY}/dgex_${PDY}${cyc}f${fcsthr} ]; then
			ln -s $COMINnawips/dgex.${PDY}/dgex_${PDY}${cyc}f${fcsthr} ${fn}
		fi


		cat > cmdfilelows  <<- EOF
			DEVICE  = ${device}
			PANEL   = 0
			TEXT    = s/22/1/1/hw
			CONTUR  = 2
			MAP     = 1
			CLEAR   = yes
			GAREA   = ${garea}
			PROJ    = ${proj}
			LATLON  = 1/10/1/2/10;10

			GLEVEL  = 0
			GVCORD  = none
			SKIP    = 0
			SCALE   = 0
			GDPFUN  = sm5s(pmsl)
			TYPE    = c
			!CINT    = 4/1/8
			CINT    = 4
			LINE    = 0
			FINT    =
			FLINE   =
			HILO    = 25/L${num}/900-1016/5/50/y
			HLSYM   = l/22/3/hw
			CLRBAR  = 0
			WIND    = 0
			REFVEC  =

			EOF

		WrottenZERO=0

		# ----- gfs -----
		gdfn=gfs # gd file name
		if [ -e ${gdfn} ]; then
			cat >> cmdfilelows  <<- EOF
				GDFILE  = ${gdfn}
				HILO    = 22/L${num}/900-1016/5/50/y
				TITLE   = 22/-2/~ ? GFS ${cyc}Z|~${name}
				GDATTIM = F${fcsthr}
				run

				EOF

			if [ $WrottenZERO -eq 0 ]; then            
			cat >> cmdfilelows  <<- EOF
				MAP     = 0
				LATLON  = 0
				CLEAR   = no

				EOF
			fi
			WrottenZERO=1
		fi 

		# ----- gfs_6 -----
		gdfn=gfs_6
		if [ -e ${gdfn} ]; then
			cat >> cmdfilelows  <<- EOF
				GDFILE  = ${gdfn}
				HILO    = 21/L${num}/900-1016/5/50/y
				TITLE   = 21/-1/~ ? GFS6 ${cyc_6}Z|~${name}
				GDATTIM = F${fcsthr_6}
				run

				EOF
			if [ $WrottenZERO -eq 0 ]; then            
				cat >> cmdfilelows  <<- EOF
					MAP     = 0
					LATLON  = 0
					CLEAR   = no

					EOF

			fi
			WrottenZERO=1
		fi 

		grids=${memberlist}
		for gridl in ${grids}
		do
			# ----- gridl_6 -----
			gdfn=${gridl}_6 
			if [ -e ${gdfn} ]; then
				cat >> cmdfilelows  <<- EOF
					GDFILE  = ${gdfn}
					HILO    = 25/L${num}/900-1016/5/50/y
					TITLE   = 25/-9/~ ? ${cyc_6}Z ENS MEMBERS|~${name}
					GDATTIM = F${fcsthr_6}
					run

					EOF
				if [ $WrottenZERO -eq 0 ]; then            
					cat >> cmdfilelows  <<- EOF
						MAP     = 0
						LATLON  = 0
						CLEAR   = no

						EOF
				fi
				WrottenZERO=1
			fi 
		done

		grids=${memberlist}
		line_count=2
		color_number=9
		for gridl in ${grids}; do
			#gridl=${grid} #$(echo $grid | tr [A-Z] [a-z])

			# ----- gridl -----
			gdfn=${gridl} # gd file name
			if [ -e ${gdfn} ]; then
				#if [ ${gdfn} == c00 ]; then
				#    color_number=6
				#    line_count=0
				#else
				color_number=$(echo $gdfn | cut -c2-)
				line_count=${color_number}
				#fi
				
				cat >> cmdfilelows  <<- EOF
					!GDFILE  = \$COMIN/$COMPONENT/gempak/ge${gridl}_${PDY}${cyc}f${fcsthr}
					GDFILE  = ${gdfn}
					HILO    = ${color_number}/L${num}/900-1016/5/50/y
					TITLE   = ${color_number}/+${line_count}/~ ? ${gdfn} ${cyc}Z ${gridl}|~${name}
					GDATTIM = F${fcsthr}
					run

					EOF

				if [ $WrottenZERO -eq 0 ]; then
					cat >> cmdfilelows  <<- EOF
						MAP     = 0
						LATLON  = 0
						CLEAR   = no

						EOF
				fi
				WrottenZERO=1
			fi 
			line_count=$(( 10#${line_count} + 1 ))
			#let color_number=$color_number+1
		done

		# ----- ukmet -----
		gdfn=ukmet # gd file name
		if [ -e ${gdfn} ]; then
			cat >> cmdfilelows  <<- EOF
				GDFILE  = ${gdfn}
				GDATTIM = F${fcsthr_ecm}
				HILO    = 7/L${num}/900-1016/5/50/y
				TITLE   = 7/-5/~ ? UKMET ${ECM_cyc}Z|~${name}
				run

				EOF

			if [ $WrottenZERO -eq 0 ]; then            
				cat >> cmdfilelows  <<- EOF
					MAP     = 0
					LATLON  = 0
					CLEAR   = no

					EOF
			fi
			WrottenZERO=1
		fi 

		# ----- ecmwf -----
		gdfn=ecmwf # gd file name
		if [ -e ${gdfn} ]; then
			cat >> cmdfilelows  <<- EOF
				GDFILE  = ${gdfn}
				GDATTIM = F${fcsthr_ecm}
				HILO    = 6/L${num}/900-1016/5/50/y
				TITLE   = 6/-4/~ ? ECMWF ${ECM_cyc}Z|~${name}
				run

				EOF

			if [ $WrottenZERO -eq 0 ]; then            
				cat >> cmdfilelows  <<- EOF
					MAP     = 0
					LATLON  = 0
					CLEAR   = no

					EOF
			fi
			WrottenZERO=1
		fi 

		# ----- gefs_avg -----
		gdfn=gefs_avg # gd file name
		if [ -e ${gdfn} ]; then
			cat >> cmdfilelows  <<- EOF
				GDFILE  = ${gdfn}
				HILO    = 1/L${num}/900-1016/5/50/y
				TITLE   = 1/-7/~ ? ENSMEAN ${cyc}Z       |~${name}
				GDATTIM = F${fcsthr}
				run

				EOF

			if [ $WrottenZERO -eq 0 ]; then            
				cat >> cmdfilelows  <<- EOF
					MAP     = 0
					LATLON  = 0
					CLEAR   = no

					EOF
			fi
			WrottenZERO=1
		fi 

		# ----- gefs_avg_6 -----
		gdfn=gefs_avg_6 # gd file name
		if [ -e ${gdfn} ]; then
			cat >> cmdfilelows  <<- EOF
				GDFILE  = ${gdfn}
				HILO    = 31/L${num}/900-1016/5/50/y
				TITLE   = 31/-6/~ ? ENSMEAN6 ${cyc_6}Z|~${name}
				GDATTIM = F${fcsthr_6}
				run

				EOF

			if [ $WrottenZERO -eq 0 ]; then            
				cat >> cmdfilelows  <<- EOF
					MAP     = 0
					LATLON  = 0
					CLEAR   = no

					EOF
			fi
			WrottenZERO=1
		fi 

		# ----- dgex -----
		gdfn=dgex # gd file name
		if [ -e ${gdfn} ]; then
			cat >> cmdfilelows  <<- EOF
				GDFILE  = ${gdfn} 
				GDATTIM = F${fcsthr}
				HILO    = 13/L${num}/900-1016/5/50/y
				TITLE   = 13/-8/~ ? ${cyc}Z DGEX|~${name}
				run

				EOF
		fi

		cat cmdfilelows
		gdplot2_nc < cmdfilelows
		err=$?

		if [[ $err != 0 ]]; then
			echo "FATAL ERROR in $(basename $BASH_SOURCE): gdplot2_nc failed using cmdfilelows!"
			err_chk
			exit $err
		fi
	
	done
done

#####################################################
# GEMPAK DOES NOT ALWAYS HAVE A NON ZERO RETURN CODE
# WHEN IT CAN NOT PRODUCE THE DESIRED GRID.  CHECK
# FOR THIS CASE HERE.
#####################################################

ls -l ${metaname}
err=$?

if [[ $err != 0 ]]; then
	echo "FATAL ERROR in $(basename $BASH_SOURCE): metafile ${metaname} not created!"
	err_chk
	exit $err
fi

if [ $SENDCOM = "YES" ] ; then
	mv ${metaname} ${COMOUT}/$COMPONENT/gempak/meta/$metaname
	if [ $SENDDBN = "YES" ] ; then
		$DBNROOT/bin/dbn_alert MODEL ${DBN_ALERT_TYPE} $job ${COMOUT}/$COMPONENT/gempak/meta/$metaname
	fi
fi

gpend
rm gemglb.nts last.nts

echo "$(date -u) end $(basename $BASH_SOURCE)"

exit 0
