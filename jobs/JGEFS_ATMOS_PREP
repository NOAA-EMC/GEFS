#! /usr/bin/env bash

source "${HOMEgefs:-${HOMEgfs}}/ush/preamble.sh"

####################################
# Determine Job Output Name on System
####################################
export jobid=${jobid:-"${job}.${PBS_JOBID}"}
export pgmout="OUTPUT.${PBS_JOBID}"
export pgmerr=errfile

####################################
# Specify and create working directory
####################################
export DATA=${DATA:-${DATAROOT}/${jobid}}
mkdir -p $DATA
cd $DATA

######################################
# Set up compute resources
######################################
export total_tasks=${total_tasks:-36}  # Must be divisible number of tiles (6)
export APRUN=${gefsmpexec:-"mpiexec -n ${total_tasks}"}

####################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-gefs}
export envir=${envir:-prod}
export RUN=${RUN:-gefs}

######################################
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
# SENDECF  - Flag Events on ECF
# VERBOSE  - Specify Verbose Output
######################################
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDECF=${SENDECF:-YES}
export VERBOSE=${VERBOSE:-YES}

######################################
# Set up the date information
######################################
export cycle=t${cyc}z
setpdy.sh
source PDY

####################################
# Specify Execution Areas
####################################
export HOMEgefs=${HOMEgefs:-${PACKAGEROOT}/gefs.${gefs_ver}}
export PARMgefs=${PARMgefs:-${HOMEgefs}/parm}
export EXECgefs=${EXECgefs:-${HOMEgefs}/exec}
export USHgefs=${USHgefs:-${HOMEgefs}/ush}
export FIXgefs=${FIXgefs:-${HOMEgefs}/fix/fix_gefs}

##############################################
# Define COM directories
##############################################
ver=${ver:-$(echo ${gefs_ver}|cut -c1-5)}
export COMPONENT="atmos"

#############################
# Source relevant config files
#############################
configs="base prep"
config_path=${PARMgefs}/config
for config in $configs; do
  . ${config_path}/config.${config}
  export err=$?
  if [[ $err != 0 ]]; then
    echo "FATAL ERROR in $(basename $BASH_SOURCE): Error while loading parm file ${config_path}/config.${config}"
    exit ${err}
  fi
done

export ROTDIR=${ROTDIR:-$(compath.py -o $NET/${ver})}
export ROTDIR_GFS=${ROTDIR_GFS:-$(compath.py ${envir}/com/gfs/${gfs_ver})}

echo "Environment before calling script"
env | sort

#############################################################
# Execute the script
$HOMEgefs/scripts/exgefs_atmos_prep.sh
export err=$?
if [[ ${err} == 0 ]]; then
  echo "${job} completed normally!"
else
  echo "FATAL ERROR in $(basename $BASH_SOURCE): ${job} failed!"
  exit $err
fi
#############################################################

##############################
# Remove the Temporary working directory
##############################
cd ${DATAROOT}
if [ ${KEEPDATA:-NO} = NO ] ; then rm -rf ${DATA} ; fi

echo "$(date -u) end $(basename $BASH_SOURCE)"

exit $err

