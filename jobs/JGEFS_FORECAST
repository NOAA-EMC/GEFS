#! /usr/bin/env bash

source "${HOMEgefs:-${HOMEgfs}}/ush/preamble.sh"

####################################
# Determine Job Output Name on System
####################################
export jobid=${jobid:-"${job}.${PBS_JOBID}"}
export pgmout="OUTPUT.${PBS_JOBID}"
export pgmerr=errfile

####################################
# Specify and create working directory
####################################
export DATA=${DATA:-${DATAROOT}/${jobid}}
mkdir -p $DATA
cd $DATA

######################################
# Set up compute resources
######################################
#export total_tasks=${total_tasks:-320}
#export APRUN=${gefsmpexec:-"mpiexec -n $total_tasks"}
#export APRUN_FV3="mpiexec -n ${npe_fcst} -ppn ${npe_node_fcst} --cpu-bind depth --depth ${NTHREADS_FV3}"

####################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-gefs}
export envir=${envir:-prod}
export RUN=${RUN:-gefs}

######################################
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
# SENDECF  - Flag Events on ECF
# VERBOSE  - Specify Verbose Output
######################################
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDECF=${SENDECF:-YES}
export VERBOSE=${VERBOSE:-YES}

######################################
# Set up the date information
######################################
export cycle=t${cyc}z
setpdy.sh
source PDY

if [ ${FORECAST_SEGMENT} = lr ]; then
  export cyc=00
  export cycle=t${cyc}z
fi

####################################
# Specify Execution Areas
####################################
export HOMEgefs=${HOMEgefs:-${PACKAGEROOT}/gefs.${gefs_ver}}
export EXECgefs=${EXECgefs:-$HOMEgefs/exec}
export USHgefs=${USHgefs:-$HOMEgefs/ush}
export FIXgefs=${FIXgefs:-$HOMEgefs/fix/fix_gefs}
export PARMgefs=${PARMgefs:-$HOMEgefs/parm}

##############################################
# Define COM directories
##############################################
ver=${gefs_ver:0:5}
export COMIN=${COMIN:-$(compath.py $envir/com/$NET/${ver})/${RUN}.${PDY}/$cyc}
export COMOUT=${COMOUT:-$(compath.py -o $NET/${ver})/${RUN}.${PDY}/$cyc}
export ROTDIR=${ROTDIR:-$(compath.py $envir/com/$NET/${ver})}

#############################
# Source relevant config files
#############################
export CDATE=$PDY$cyc
configs="gefs gefs_fcst" #gefs_ufs gefs_wave gefs_fcst"
config_path=$PARMgefs
for config in $configs; do
  . $config_path/$config.parm
  export err=$?
  if [[ $err != 0 ]]; then
    echo "FATAL ERROR in ${BASH_SOURCE}: Error while loading parm file $config_path/$config.parm"
    exit $err
  fi
done

export APRUN_UFS=${APRUN_UFS:-"${launcher:-'mpiexec -l'} -n ${npe_fcst} -ppn ${npe_node_fcst} --cpu-bind depth --depth ${NTHREADS_FV3}"}

if [[ $cplchm = ".true." ]]; then
  COMPONENT="chem"
fi
if [[ $cplwav = ".true." ]]; then
  # Set location of wave restart from last cycle
  last_date=$($NDATE -$WAVHCYC $CDATE)
  last_PDY=$(echo $last_date | cut -c1-8)
  last_cyc=$(echo $last_date | cut -c9-10)
  export WRDIR=${WRDIR:-$(compath.py $envir/com/$NET/${ver})}/${RUN}.${last_PDY}/$last_cyc/wave/restart
fi

export COMPONENT=${COMPONENT:-atmos}

echo "Environment before calling script"
env | sort

#############################################################
# Execute the script
$HOMEgefs/scripts/exgefs_forecast.sh
export err=$?
if [[ $err == 0 ]]; then
  echo "$job completed normally!"
else
  echo "FATAL ERROR in ${BASH_SOURCE}: $job failed!"
  exit $err
fi
#############################################################

##############################
# Remove the Temporary working directory
##############################
cd $DATAROOT
if [ ${KEEPDATA:-NO} = NO ] ; then rm -rf $DATA ; fi

echo "$(date -u) end ${BASH_SOURCE}"

exit $err
